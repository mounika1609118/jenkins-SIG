pipeline {
  agent any
  options {
    skipDefaultCheckout(true)
  }

  stages {
    stage('Clean Workspace') {
      steps {
        cleanWs()
      }
    }

    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/mounika1609118/jenkins-SIG.git'
      }
    }

    stage('Build with Maven') {
      steps {
        script {
          docker.image('maven:3.9.6-eclipse-temurin-11').inside('-u root') {
            sh 'ls -la' // Optional: check pom.xml is present
            sh 'mvn clean package -DskipTests'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent {
        docker {
          image 'docker:24.0.5'
          args '-v /var/run/docker.sock:/var/run/docker.sock -u root'
        }
      }
      environment {
        DOCKER_IMAGE = "mounia18/spring-demo:${env.BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'ls -l Dockerfile' // Optional: check Dockerfile exists
          sh "docker build -t ${DOCKER_IMAGE} ."

          sh """
            echo $REGISTRY_CREDENTIALS_PSW | docker login -u $REGISTRY_CREDENTIALS_USR --password-stdin
            docker push ${DOCKER_IMAGE}
            docker logout
          """
        }
      }
    }
  }
}
